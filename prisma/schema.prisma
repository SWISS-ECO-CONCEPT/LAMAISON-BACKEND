datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  AGENT
  PROSPECT
}

enum RdvStatus {
  EN_ATTENTE
  ACCEPTE
  REFUSE
  ANNULE
}

model User {
  id        Int      @id @default(autoincrement())
  clerkId   String   @unique // identifiant unique Clerk (équivaut à l’auth provider)
  firstname String
  role      Role
  phone     String?
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // relations
  favoris          Favori[] 
  sentMessages     Message[]    @relation("SentMessages")
  receivedMessages Message[]    @relation("ReceivedMessages")
  annonces         Annonce[] 
  rdvs             RendezVous[] @relation("ProspectRdv")

  Image Image[]
}


model Annonce {
  id             Int          @id @default(autoincrement())
  titre          String
  description    String
  prix           Float
  ville          String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  
   // relations
  favoris        Favori[] // relation vers Favori
  // propriétaire de l’annonce (agent ou particulier vendeur)
  proprietaire   User         @relation(fields: [proprietaireId], references: [id])
  proprietaireId Int
  rendezVous     RendezVous[] // les RDV liés à cette annonc
  Image Image[]
}

model Favori {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  annonce   Annonce  @relation(fields: [annonceId], references: [id])
  annonceId Int
  createdAt DateTime @default(now())

  @@unique([userId, annonceId]) // un user ne peut pas ajouter 2x la même annonce
}

model RendezVous {
  id         Int       @id @default(autoincrement())
  date       DateTime
  status     RdvStatus @default(EN_ATTENTE)
  createdAt  DateTime  @default(now())
  // Relation vers le prospect (demandeur)
  prospect   User      @relation("ProspectRdv", fields: [prospectId], references: [id])
  prospectId Int
  // Relation vers l’annonce concernée
  annonce    Annonce   @relation(fields: [annonceId], references: [id])
  annonceId  Int
}

model Message {
  id         Int      @id @default(autoincrement())
  senderId   Int
  receiverId Int
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  sender   User @relation("SentMessages", fields: [senderId], references: [id])
  receiver User @relation("ReceivedMessages", fields: [receiverId], references: [id])
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  annonce   Annonce  @relation(fields: [annonceId], references: [id])
  annonceId Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}
